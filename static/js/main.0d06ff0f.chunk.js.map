{"version":3,"sources":["context/alert/alertContext.js","context/github/githubContext.js","components/search/index.js","components/search/search.js","components/card/index.js","components/card/card.js","pages/home.js","pages/about.js","components/repos/index.js","components/repos/repos.js","pages/profile.js","components/navbar/index.js","components/navbar/navbar.js","components/alert/index.js","components/alert/alert.js","context/alert/alertReducer.js","context/types.js","context/alert/AlertState.js","context/github/GithubReducer.js","context/github/GithubState.js","App.js","serviceWorker.js","index.js"],"names":["AlertContext","createContext","GithubContext","Search","useState","value","setValue","useContext","show","hide","github","className","type","placeholder","onKeyPress","event","key","trim","console","log","search","clearUsers","onChange","target","Card","user","src","avatar_url","alt","login","to","Home","loading","users","map","id","About","Repos","repos","Fragment","repo","href","html_url","name","Profile","match","getUser","getRepos","nameUrl","params","useEffect","company","location","bio","blog","followers","following","public_repos","public_gists","style","width","rel","Navbar","exact","Alert","alert","role","text","aria-label","onClick","aria-hidden","handlers","state","action","payload","alertReducer","DEFAULT","AlertState","children","useReducer","dispatch","Provider","githubReducer","CLIENT_ID","process","REACT_APP_CLIENT_ID","CLIENT_SECRET","REACT_APP_CLIENT_SECRET","withCreds","url","GithubState","setLoading","a","async","axios","get","response","data","items","App","basename","path","component","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0d06ff0f.chunk.js","sourcesContent":["import {createContext} from 'react';\r\n\r\nexport const AlertContext = createContext();\r\n","import {createContext} from 'react';\r\n\r\nexport const GithubContext = createContext();\r\n","import Search from \"./search\";\r\n\r\nexport default Search;\r\n","import React, {useContext, useState} from 'react';\r\nimport {AlertContext} from \"../../context/alert/alertContext\";\r\nimport {GithubContext} from \"../../context/github/githubContext\";\r\n\r\nconst Search = () => {\r\n    const [value, setValue] = useState('');\r\n    const {show, hide} = useContext(AlertContext);\r\n    const github = useContext(GithubContext);\r\n\r\n    const onSubmit = (event) => {\r\n        if (event.key !== 'Enter') {\r\n            return\r\n        }\r\n\r\n        if (value.trim()) {\r\n            console.log('Make request with: ' + value);\r\n            github.search(value.trim());\r\n            hide();\r\n        } else {\r\n            github.clearUsers();\r\n            show(\"Введите имя пользователя\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"form-group\">\r\n            <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Введите ник пользователя\"\r\n                onKeyPress={onSubmit}\r\n                value={value}\r\n                onChange={event => setValue(event.target.value)}\r\n            />\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Search;\r\n","import Card from \"./card\";\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst Card = ({user}) => {\r\n    return (\r\n        <div className=\"card\">\r\n            <img src={user.avatar_url} alt={user.login} className=\"card-img-top\"/>\r\n            <div className=\"card-body\">\r\n                <h5 className=\"card-title\">{user.login}</h5>\r\n                {/* eslint-disable-next-line no-useless-concat */}\r\n                <Link to={'/profile/' + user.login} className=\"btn btn-primary\">React</Link>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Card;\r\n","import React, {useContext} from \"react\";\r\nimport Search from \"../components/search\";\r\nimport Card from \"../components/card\";\r\nimport {GithubContext} from \"../context/github/githubContext\";\r\n\r\nconst Home = () => {\r\n    const {loading, users} = useContext(GithubContext);\r\n\r\n    return (\r\n        <>\r\n            <Search/>\r\n            <div className=\"row\">\r\n                {\r\n                    loading\r\n                        ? <p className=\"text-center\">Загрузка</p>\r\n                        : users.map(user => (\r\n                            <div className=\"col-sm-4 mb-4\" key={user.id}>\r\n                                <Card user={user}/>\r\n                            </div>\r\n                        ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\n\r\nconst About = () => {\r\n    return (\r\n        <div className=\"jumbotron jumbotron-fluid\">\r\n            <div className=\"container\">\r\n                <h1 className=\"display-4\">Информация</h1>\r\n                <p className=\"lead\">Версия приложени: <strong>1.0.0</strong></p>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default About;\r\n","import Repos from \"./repos\";\r\n\r\nexport default Repos;\r\n","import React from \"react\";\r\n\r\nconst Repos = ({repos}) => (\r\n    <React.Fragment>\r\n        {repos.map(repo => (\r\n            <div className=\"card mb-3\" key={repo.id}>\r\n                <div className=\"card-body\">\r\n                    <h5>\r\n                        <a href={repo.html_url} target=\"_blank\">{repo.name}</a>\r\n                    </h5>\r\n                </div>\r\n            </div>\r\n        ))}\r\n    </React.Fragment>\r\n);\r\n\r\nexport default Repos;\r\n","import React, {Fragment, useContext, useEffect} from \"react\"\r\nimport {Link} from 'react-router-dom';\r\nimport {GithubContext} from \"../context/github/githubContext\";\r\nimport Repos from \"../components/repos\";\r\n\r\nconst Profile = ({match}) => {\r\n    console.log(match);\r\n    const {getUser, getRepos, loading, user, repos} = useContext(GithubContext);\r\n    const nameUrl = match.params.name;\r\n\r\n\r\n    useEffect(() => {\r\n        console.log(nameUrl);\r\n        getUser(nameUrl);\r\n        getRepos(nameUrl);\r\n        console.log(\"effect\")\r\n    }, []);\r\n\r\n    if (loading) {\r\n        return <p className=\"text-center\">Загрузка</p>;\r\n    }\r\n    const {\r\n        name, company, avatar_url,\r\n        location, bio, blog,\r\n        login, html_url, followers,\r\n        following, public_repos,\r\n        public_gists\r\n    } = user;\r\n\r\n    return (\r\n        <Fragment>\r\n            <Link to=\"/\" className=\"btn btn-link\">На главную</Link>\r\n\r\n            <div className=\"card mb-4\">\r\n                <div className=\"card-body\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-3 text-center\">\r\n                            <img\r\n                                src={avatar_url}\r\n                                alt={name}\r\n                                style={{width: '150px'}}\r\n                            />\r\n                            <h1>{name}</h1>\r\n                            {location && <p>Местоположение: {location}</p>}\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            {\r\n                                bio && <Fragment>\r\n                                    <h3>BIO</h3>\r\n                                    <p>{bio}</p>\r\n                                </Fragment>\r\n                            }\r\n                            <a\r\n                                href={html_url}\r\n                                target=\"_blank\"\r\n                                rel=\"noopener noreferrer\"\r\n                                className=\"btn btn-dark\"\r\n                            >Открыть профиль</a>\r\n                            <ul>\r\n                                {login && <li>\r\n                                    <strong>Username: </strong> {login}\r\n                                </li>}\r\n\r\n                                {company && <li>\r\n                                    <strong>Компания: </strong> {company}\r\n                                </li>}\r\n\r\n                                {blog && <li>\r\n                                    <strong>Website: </strong> {blog}\r\n                                </li>}\r\n                            </ul>\r\n\r\n                            <div className=\"badge badge-primary\">Подписчики: {followers}</div>\r\n                            <div className=\"badge badge-success\">Подписан: {following}</div>\r\n                            <div className=\"badge badge-info\">Репозитории: {public_repos}</div>\r\n                            <div className=\"badge badge-dark\">Gists: {public_gists}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <Repos repos={repos}/>\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nexport default Profile;\r\n","import Navbar from \"./navbar\";\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\"\r\n\r\nconst Navbar = () => (\r\n  <nav className=\"navbar navbar-dark bg-primary navbar-expand-lg\">\r\n      <div>Github Search</div>\r\n      <ul className=\"navbar-nav\">\r\n          <li className=\"nav-item\">\r\n              <NavLink exact to=\"/\" className=\"nav-link\">Главная</NavLink>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n              <NavLink to=\"/about\" className=\"nav-link\">Информация</NavLink>\r\n          </li>\r\n      </ul>\r\n  </nav>\r\n);\r\n\r\nexport default Navbar;\r\n","import Alert from \"./alert\";\r\n\r\nexport default Alert;\r\n","import React, {useContext} from \"react\";\r\nimport {AlertContext} from \"../../context/alert/alertContext\";\r\n\r\nconst Alert = () => {\r\n    const {alert, hide} = useContext(AlertContext);\r\n\r\n    if (!alert) return null;\r\n\r\n    return (\r\n        <div\r\n            className={`alert alert-${alert.type || 'secondary'} alert-dismissible`}\r\n            role=\"alert\"\r\n        >\r\n            {alert.text}\r\n            <button type=\"button\" className=\"close\" aria-label=\"Close\" onClick={hide}>\r\n                <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Alert;\r\n","import {HIDE_ALERT, SHOW_ALERT} from \"../types\";\r\n\r\nconst handlers = {\r\n    [SHOW_ALERT]: (state, action) => action.payload,\r\n    [HIDE_ALERT]: () => null,\r\n    DEFAULT: state => state\r\n};\r\n\r\nexport const alertReducer = (state, action) => {\r\n    const handler = handlers[action.type] || handlers.DEFAULT;\r\n    return handler(state, action);\r\n};\r\n","export const SHOW_ALERT = 'SHOW_ALERT';\r\nexport const HIDE_ALERT = 'HIDE_ALERT';\r\nexport const CLEAR_USERS = 'CLEAR_USERS';\r\nexport const GET_REPOS = 'GET_REPOS';\r\nexport const GET_USER = 'GET_USER';\r\nexport const SEARCH_USERS = 'SEARCH_USERS';\r\nexport const SET_LOADING = 'SET_LOADING';\r\n","import React, {useReducer} from \"react\";\r\nimport {AlertContext} from './alertContext'\r\nimport {alertReducer} from \"./alertReducer\";\r\nimport {HIDE_ALERT, SHOW_ALERT} from \"../types\";\r\n\r\nconst AlertState = ({children}) => {\r\n    const [state, dispatch] = useReducer(alertReducer, null);\r\n\r\n    const hide = () => dispatch({type: HIDE_ALERT});\r\n\r\n    const show = (text, type = 'secondary') => dispatch({\r\n        type: SHOW_ALERT,\r\n        payload: {type, text}\r\n    });\r\n\r\n    return (\r\n        <AlertContext.Provider\r\n            value={{hide, show, alert: state}}\r\n        >\r\n            {children}\r\n        </AlertContext.Provider>\r\n    )\r\n};\r\n\r\n\r\nexport default AlertState;\r\n","import {} from \"../types\";\r\nimport {SEARCH_USERS} from \"../types\";\r\nimport {GET_REPOS} from \"../types\";\r\nimport {GET_USER} from \"../types\";\r\nimport {SET_LOADING} from \"../types\";\r\nimport {CLEAR_USERS} from \"../types\";\r\n\r\nconst handlers = {\r\n    [SEARCH_USERS]: (state, {payload}) => ({...state, users: payload, loading: false}),\r\n    [GET_REPOS]: (state, {payload}) =>  ({...state, repos: payload, loading: false}),\r\n    [GET_USER]: (state, {payload}) =>  ({...state, user: payload, loading: false}),\r\n    [CLEAR_USERS]: (state, {payload}) =>  ({...state, users: []}),\r\n    [SET_LOADING]: (state, {payload}) =>  ({...state, loading: true}),\r\n    DEFAULT: state => state\r\n};\r\n\r\nexport const githubReducer = (state, action) => {\r\n    const handler = handlers[action.type] || handlers.DEFAULT;\r\n    return handler(state, action);\r\n};\r\n","import React, {useReducer} from \"react\";\r\nimport {GithubContext} from './githubContext';\r\nimport {githubReducer} from \"./GithubReducer\";\r\nimport axios from 'axios';\r\nimport {CLEAR_USERS, GET_REPOS, GET_USER, SEARCH_USERS, SET_LOADING} from \"../types\";\r\n\r\nconst CLIENT_ID = process.env.REACT_APP_CLIENT_ID;\r\nconst CLIENT_SECRET = process.env.REACT_APP_CLIENT_SECRET;\r\n\r\nconst withCreds = url => {\r\n    return `${url}client_id=${CLIENT_ID}&client_secret=${CLIENT_SECRET}`\r\n};\r\n\r\nconst GithubState = ({children}) => {\r\n    const initialState = {\r\n        user: {},\r\n        users: [],\r\n        loading: false,\r\n        repos: []\r\n    };\r\n\r\n    const [state, dispatch] = useReducer(githubReducer, initialState);\r\n\r\n    const search = async value => {\r\n        setLoading();\r\n\r\n        const response = await axios.get(\r\n            withCreds(`https://api.github.com/search/users?q=${value}&`)\r\n        );\r\n\r\n        dispatch({\r\n            type: SEARCH_USERS,\r\n            payload: response.data.items\r\n        })\r\n    };\r\n\r\n    const getUser = async name => {\r\n        setLoading();\r\n\r\n        const response = await axios.get(\r\n            withCreds(`https://api.github.com/users/${name}?`)\r\n        );\r\n\r\n        dispatch({\r\n            type: GET_USER,\r\n            payload: response.data\r\n        })\r\n    };\r\n\r\n    const getRepos = async name => {\r\n        setLoading();\r\n\r\n        const response = await axios.get(\r\n            withCreds(`https://api.github.com/users/${name}/repos?per_page=5&`)\r\n        );\r\n\r\n        dispatch({\r\n            type: GET_REPOS,\r\n            payload: response.data\r\n        })\r\n    };\r\n\r\n    const clearUsers = () => dispatch({type: CLEAR_USERS});\r\n\r\n    const setLoading = () => dispatch({type: SET_LOADING});\r\n\r\n    const {user, users, repos, loading} = state;\r\n\r\n    return (\r\n        <GithubContext.Provider\r\n            value={{\r\n                search, setLoading, getRepos, clearUsers, getUser, user, users, repos, loading\r\n            }}\r\n        >\r\n            {children}\r\n        </GithubContext.Provider>\r\n    )\r\n};\r\n\r\nexport default GithubState;\r\n","import React from 'react';\r\nimport {BrowserRouter, Switch, Route} from \"react-router-dom\";\r\nimport Home from \"./pages/home\";\r\nimport About from \"./pages/about\";\r\nimport Profile from \"./pages/profile\";\r\nimport Navbar from \"./components/navbar\";\r\nimport Alert from \"./components/alert\";\r\nimport AlertState from \"./context/alert/AlertState\";\r\nimport GithubState from \"./context/github/GithubState\";\r\n\r\nfunction App() {\r\n    return (\r\n        <>\r\n            <GithubState>\r\n                <AlertState>\r\n                    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n                        <Navbar/>\r\n                        <div className=\"container pt-4\">\r\n                            <Alert alert={{text: 'Test alert'}}/>\r\n                            <Switch>\r\n                                <Route path=\"/\" exact component={Home}/>\r\n                                <Route path=\"/about\" component={About}/>\r\n                                <Route path=\"/profile/:name\" component={Profile}/>\r\n                            </Switch>\r\n                        </div>\r\n                    </BrowserRouter>\r\n                </AlertState>\r\n            </GithubState>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}